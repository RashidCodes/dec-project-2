with raw_source as (

    select *
    from {{ source('github_dagster', 'repositories_scd') }}

),

final as (

    select
        "_AIRBYTE_UNIQUE_KEY"::VARCHAR as airbyte_unique_key,
        "_AIRBYTE_UNIQUE_KEY_SCD"::VARCHAR as airbyte_unique_key_scd,
        "ID"::NUMBER as id,
        "URL"::VARCHAR as url,
        "FORK"::BOOLEAN as fork,
        "NAME"::VARCHAR as name,
        "SIZE"::NUMBER as size,
        "OWNER"::VARIANT as owner,
        "TOPICS"::VARIANT as topics,
        "GIT_URL"::VARCHAR as git_url,
        "LICENSE"::VARIANT as license,
        "NODE_ID"::VARCHAR as node_id,
        "PRIVATE"::BOOLEAN as private,
        "SSH_URL"::VARCHAR as ssh_url,
        "SVN_URL"::VARCHAR as svn_url,
        "ARCHIVED"::BOOLEAN as archived,
        "DISABLED"::BOOLEAN as disabled,
        "HAS_WIKI"::BOOLEAN as has_wiki,
        "HOMEPAGE"::VARCHAR as homepage,
        "HTML_URL"::VARCHAR as html_url,
        "KEYS_URL"::VARCHAR as keys_url,
        "LANGUAGE"::VARCHAR as language,
        "TAGS_URL"::VARCHAR as tags_url,
        "BLOBS_URL"::VARCHAR as blobs_url,
        "CLONE_URL"::VARCHAR as clone_url,
        "FORKS_URL"::VARCHAR as forks_url,
        "FULL_NAME"::VARCHAR as full_name,
        "HAS_PAGES"::BOOLEAN as has_pages,
        "HOOKS_URL"::VARCHAR as hooks_url,
        "PULLS_URL"::VARCHAR as pulls_url,
        "PUSHED_AT"::TIMESTAMP_TZ as pushed_at,
        "TEAMS_URL"::VARCHAR as teams_url,
        "TREES_URL"::VARCHAR as trees_url,
        "CREATED_AT"::TIMESTAMP_TZ as created_at,
        "EVENTS_URL"::VARCHAR as events_url,
        "HAS_ISSUES"::BOOLEAN as has_issues,
        "ISSUES_URL"::VARCHAR as issues_url,
        "LABELS_URL"::VARCHAR as labels_url,
        "MERGES_URL"::VARCHAR as merges_url,
        "MIRROR_URL"::VARCHAR as mirror_url,
        "UPDATED_AT"::TIMESTAMP_TZ as updated_at,
        "VISIBILITY"::VARCHAR as visibility,
        "ARCHIVE_URL"::VARCHAR as archive_url,
        "COMMITS_URL"::VARCHAR as commits_url,
        "COMPARE_URL"::VARCHAR as compare_url,
        "DESCRIPTION"::VARCHAR as description,
        "FORKS_COUNT"::NUMBER as forks_count,
        "IS_TEMPLATE"::BOOLEAN as is_template,
        "PERMISSIONS"::VARIANT as permissions,
        "BRANCHES_URL"::VARCHAR as branches_url,
        "COMMENTS_URL"::VARCHAR as comments_url,
        "CONTENTS_URL"::VARCHAR as contents_url,
        "GIT_REFS_URL"::VARCHAR as git_refs_url,
        "GIT_TAGS_URL"::VARCHAR as git_tags_url,
        "HAS_PROJECTS"::BOOLEAN as has_projects,
        "RELEASES_URL"::VARCHAR as releases_url,
        "STATUSES_URL"::VARCHAR as statuses_url,
        "ASSIGNEES_URL"::VARCHAR as assignees_url,
        "DOWNLOADS_URL"::VARCHAR as downloads_url,
        "HAS_DOWNLOADS"::BOOLEAN as has_downloads,
        "LANGUAGES_URL"::VARCHAR as languages_url,
        "DEFAULT_BRANCH"::VARCHAR as default_branch,
        "MILESTONES_URL"::VARCHAR as milestones_url,
        "STARGAZERS_URL"::VARCHAR as stargazers_url,
        "WATCHERS_COUNT"::NUMBER as watchers_count,
        "DEPLOYMENTS_URL"::VARCHAR as deployments_url,
        "GIT_COMMITS_URL"::VARCHAR as git_commits_url,
        "SUBSCRIBERS_URL"::VARCHAR as subscribers_url,
        "CONTRIBUTORS_URL"::VARCHAR as contributors_url,
        "ISSUE_EVENTS_URL"::VARCHAR as issue_events_url,
        "STARGAZERS_COUNT"::NUMBER as stargazers_count,
        "SUBSCRIPTION_URL"::VARCHAR as subscription_url,
        "COLLABORATORS_URL"::VARCHAR as collaborators_url,
        "ISSUE_COMMENT_URL"::VARCHAR as issue_comment_url,
        "NOTIFICATIONS_URL"::VARCHAR as notifications_url,
        "OPEN_ISSUES_COUNT"::NUMBER as open_issues_count,
        "_AIRBYTE_START_AT"::TIMESTAMP_TZ as airbyte_start_at,
        "_AIRBYTE_END_AT"::TIMESTAMP_TZ as airbyte_end_at,
        "_AIRBYTE_ACTIVE_ROW"::NUMBER as airbyte_active_row,
        "_AIRBYTE_AB_ID"::VARCHAR as airbyte_ab_id,
        "_AIRBYTE_EMITTED_AT"::TIMESTAMP_TZ as airbyte_emitted_at,
        "_AIRBYTE_NORMALIZED_AT"::TIMESTAMP_TZ as airbyte_normalized_at,
        "_AIRBYTE_REPOSITORIES_HASHID"::VARCHAR as airbyte_repositories_hashid

    from raw_source

)

select * from final
